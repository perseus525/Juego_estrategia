/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package juego_estrategia_prototype;

import java.util.ArrayList;
import java.util.Scanner;



/**
 *
 * @author marclo
 */
public class ListaLuchadores {
    
     //método para preguntar con qué filtros se desea ver la lista de Luchadores
    public static void mostrarListaAsk(ArrayList <Luchador> list, ArrayList <ObjetoEquipable> inventory, ArrayList <String> checker){
        
        //este método pregunta al usuario que filtros desea aplicar a la lista de Luchadores y luego invoca a un metodo que interpreta la respuesta del usuario
        
        //de no tener Luchadores, el método despliega un mensaje indicándoselo al usuario y regresa al menu
        
        if (list.isEmpty()){
        
            System.out.println("You have no fighters.");
        }
        
        else{
           System.out.println("Which ones do you want to see? (Input number)");
          
           System.out.println("1) All of them (simplified).");

           System.out.println("2) All of them (with all their stats).");

           System.out.println("3) The stats of a specific Fighter.");

           System.out.println("4) Specific Rank.");

           System.out.println("5) Specific Type.");
           
           System.out.println("");
           
           System.out.println("");
              
           int respuesta;
     
           Scanner scan = new Scanner(System.in);
     
           respuesta = scan.nextInt();
           
           respuestaMostrarLista(list, inventory, checker, respuesta);
        }     
    } 
    
    //metodo que invoca a los metodos necesarios para mostrar la lista con los filtros deseados
    private static void respuestaMostrarLista(ArrayList <Luchador> list, ArrayList <ObjetoEquipable> inventory, ArrayList <String> checker, int respuesta){
    
         switch (respuesta){
               
               case 1: System.out.println("Item Effects have already been added.");
               
                   System.out.println("");
                   
                   mostrarListaLuchadorSimple (list);
                   
                   Luchador.equipItemsAsk(list, inventory, checker);
               break;
               
               case 2: System.out.println("Item Effects have already been added.");
               
                   System.out.println("");
                   
                   mostrarTodoLuchador (list);
                   
                   Luchador.equipItemsAsk(list, inventory, checker);
               break;
               
               case 3: System.out.println("Item Effects have already been added.");
               
                   System.out.println("");
                   
                   mostrarUnLuchador(list,checker);
                   
                   Luchador.equipItemsAsk(list, inventory, checker);
               break;
               
               case 4: System.out.println("Item Effects have already been added.");
               
                   System.out.println("");
                   
                   mostrarRankLuchadorAsk (list);
                   
                   Luchador.equipItemsAsk(list, inventory, checker);
               break;
               
               case 5: System.out.println("Item Effects have already been added.");
               
                   System.out.println("");
                   
                   mostrarTypeLuchadorAsk (list);
                   
                   System.out.println("");
                   
                   Luchador.equipItemsAsk(list, inventory, checker);
               break;
               
               default: System.out.println ("NOT POSSIBLE.");

                   Menu.checkError(checker);
               break;
            }     
    }
    
    //metodo para mostrar la lista completa de Luchadores con sus estadistica "simples"
    public static void mostrarListaLuchadorSimple(ArrayList <Luchador> list){
        
        System.out.println("Start of Fighter list");
        
                for(int i = 0; i< list.size(); i++){
                    
                   System.out.println("");
                    
                   System.out.print(i+1 + ")");
                               
                   Luchador.mostrarLuchadorSimple(list.get(i));
                    
                   System.out.println("");
                }
                
          System.out.println("End of Fighter list ");
    
    }
    
    //metodo para mostrar a todos los Luchadores con todos sus estadisticas
    public static void mostrarTodoLuchador(ArrayList <Luchador> list){
    
    System.out.println("Start of Fighter list");
    
                for(int i = 0; i< list.size(); i++){
                    
                   System.out.println("");
                    
                   System.out.print(i+1 + ")");
                   
                   Luchador.mostrarLuchadorCompleto(list.get(i));
                   
                   System.out.println("");
                } 
          System.out.println("End of Fighter list ");
    }
    
    //metodo para ver las estadísiticas de un Luchador especifico
    public static void mostrarUnLuchador(ArrayList <Luchador> list, ArrayList <String> checker){
    
        //aqui se le muetsra al usuario lso nombres de los Luchadores que tiene y se le pregunta cual desea revisar
        System.out.println("Input the number of the Fighter you wish to evaluate.");
          
        for (int i = 0; i < list.size(); i++){
           
            System.out.println("");
            
            System.out.println(i + 1 + ") " + list. get (i).getName());
           
        }
           
        System.out.println("");
           
        int NameAsk;
     
        Scanner scan = new Scanner(System.in);
     
        NameAsk = scan.nextInt();
        
        Luchador.mostrarLuchadorCompleto(list.get(NameAsk - 1));
    }
    
    //metodo que le pregunta al usuario que "RANK" de Luchadores desea ver e invoca al metodo necesario para mostrar dlos Luchadores pedidos
    public static void mostrarRankLuchadorAsk(ArrayList <Luchador> list){
        
        System.out.println("Which Ranked warriors do you wish to see?");
        
         System.out.println("");

        System.out.println("1) RANK 1");

        System.out.println("2) RANK 2");
        
        System.out.println("3) RANK 3");
        
        System.out.println("4) RANK 4");
        
        System.out.println("5) RANK 5");
        
        System.out.println("");
    
        int RankAsk;
     
        Scanner scan = new Scanner(System.in);
     
        RankAsk = scan.nextInt();
        
        mostrarRankLuchador (list, RankAsk);   
    }
    
    //metodo que mostrar los Luchadors de un "RANK" especifico
    public static void mostrarRankLuchador(ArrayList <Luchador> list, int RankAsk){
        
        System.out.println("Start of Fighter list");
        
                for(int i = 0; i< list.size(); i++){
                   
                   if(list.get(i).getRank() == RankAsk ){

                       System.out.println("");
                       
                       Luchador.mostrarLuchadorCompleto(list.get(i));
                       
                       System.out.println("");
                    }  
                }
          System.out.println("End of Fighter list ");  
    }
    
    //metodo que le pregunta al usuario que Tipo/elemento de Luchadores desea ver e invoca al metodo necesario para mostrarlos
    public static void mostrarTypeLuchadorAsk(ArrayList <Luchador> list){
        
        System.out.println("Which warrior Type do you wish to see?(Input number)");
        
         System.out.println("");
        
        System.out.println("1) Fire.");

        System.out.println("2) Water.");
        
        System.out.println("3) Earth.");
        
        System.out.println("");
        
        int TypeAsk;
     
        Scanner scan = new Scanner(System.in);
     
        TypeAsk = scan.nextInt();
        
        mostrarTypeLuchador (list, TypeAsk);   
    }
    
    //metodo que muestra a todos los luchadores de un Tipo/elemento especifico
    public static void mostrarTypeLuchador(ArrayList <Luchador> list , int TypeAsk){

        String CheckType = "";
        
        //aqui se revisa cual fue el Tipo/Elemento pedido por el usuario
        switch (TypeAsk){
               
               case 1: CheckType = "Fire";
               break;
               
               case 2: CheckType = "Water";
               break;
               
               case 3: CheckType = "Earth";
               break;
        }
        
        //aqui se muetsra todos los Luchadores del Tipo/Elemetnos pedido
        System.out.println("Start of Fighter list");
        
                int j=1;
        
                for(int i = 0; i< list.size(); i++){
                   
                   if(list.get(i).getType() .equals( CheckType )){

                       System.out.println("");
                       
                       System.out.print("j)");
                       
                       Luchador.mostrarLuchadorCompleto(list.get(i));
                       
                       j++;
                      }  
                }    
          System.out.println("End of Fighter list ");
    }  
    
    //método para preguntar si se desea eliminar un luchador
    public static void eliminarLuchadorAsk(ArrayList <Luchador> list, ArrayList <ObjetoEquipable> inventory, ArrayList <String> checker){

            System.out.println("Which coward are you exiling?(Input number)");
            
            ListaLuchadores.mostrarListaLuchadorSimple(list);
        
            int numero;
     
            Scanner scan = new Scanner(System.in);
     
            numero = scan.nextInt();
            
            eliminarLuchador(list, (numero - 1), checker);          
}
        
    //metodo para eliminar al luchador
    public static void eliminarLuchador(ArrayList <Luchador> list, int fighterID, ArrayList <String> checker){
 
        if (fighterID + 1 <= list.size()){
            
            list.remove(fighterID);
        }
        else{ System.out.println("");
            
            System.out.println("You don't have THAT many recuits.");
            
            Menu.checkError(checker);
        }
    }
    
    //método para crear un luchador de manera aleatoria 
    public static void crearLuchador(ArrayList <Luchador> list){
        
        //este método crea un nuevo Luchador y muestra sus estadísticas por pantalla
        
        //aqui se revisa cuantos Luchadores se tiene, de tenerse menos de 25 se crea uno nuevo
        if (list.size() < 25){
  
            list.add(new Luchador());  
            

            if(list.size() > 1){
             
                //invocacion el metodo que revisa los nombres repetidos
                checkName(list, (list.get( (list.size () - 1) ). getName()));

            }
          
          System.out.println("Your new Fighter is: "); 
         
          //invocacion al metodo que muestra a un Luchador con todas sus estadisticas
            Luchador.mostrarLuchadorCompleto(list.get(list.size()-1));  
        }
    
        else{
            
        System.out.println("You cannot have any more fighters."); 
        }
     }
    
    //método para revisar los nombres de los luchadroes y así evitar la repetición de nombres
    public static void checkName(ArrayList <Luchador> list, String Name){
        
        //este método revisa el nombre del último Luchador creado y lo compara con todos los nombres de los Luchadores creados anteriormente
        //si el nombre del Luchador nuevo ya está en uso, invoca al método "darName", asigna un nuevo nombre y luego lo compara con los nombres de
        //los luchadores creados hasta que al nuevo Luchador se le asigne un nombre que no esté en uso
        
        int i = list.size() - 2;
       
        while ( i >= 0){
                       
            if(list.get(i).getName() .equals( Name )){
                    
                    list.get(list.size()-1).setName(Luchador.darNameLuchador());
                    
                    Name = list. get (list.size()-1).getName();
                    
                    System.out.println(list. get (list.size()-1).getName());
                    
                    i = list.size() - 1;
            }
            i--;
        }       
    }  
}
